canvas默认大小是300*150


在canvas中不能通过设置css中的width和height来控制canvas的大小
因为canvas中的每一个坐标及宽高都代表一个css像素,通过css设置会失真



设置canvas的大小:
1.在canvas标签中设置属性
2.在js中设置




只要支持canvas标签的浏览器就都支持canvas的方法的特性
对于ie678这些不支持canvas的浏览器会把canvas解释为普通div，
需要提示
<canvas>浏览器不支持canvas</canvas>



canvas中每一个坐标点都对应一个像素点



getContext   canvas上下文



//canvas 3d
var webgl = canvas.getContext('webgl')//给我们准备一个画3d图像的画笔---three.js





设置线的末端类型 butt默认 round圆角 square方块(加一个小方块)
      context.lineCap ='round';


画多条线段stroke一次即可


设置线的拐点的样式
   // context.lineJoin = 'miter';//默认
     context.lineJoin = 'round';//圆角
   // context.lineJoin = 'bevel';//尖角变平角



canvas绘制图形是基于状态的, 通过(strokestyle,lineWidth)绘制时若无beginPath就是用的当前的样式

      // 当线条设置不同的颜色，用多个stroke()  如果没有设置线宽要大于等于2 就会出现渲染的问题(会多次stroke) 既不是我们设置的也不是默认的 
      // 统一最后使用一个stroke();  那么 如果样式的设置 就会被后面的覆盖 


      // 总结: 如果用一个stroke  再开启一个新路径的画 就只会画出一条线 这是不对的
      //   应该的做法是 一个新路径  对应一个stroke

      // 其实在canvas绘图的时候 canvas对象本身就已经开启了一个新路径




只有在strokestyle,lineWidth不同时即需要设置不同的样式时才需要开启beginPath



在canvas中默认不会闭合路径，所以绘制图形需要加closePath来闭合




fill的非零环绕原则(绘制路径是有方向的)：

如果需要判断某一个区域是否需要填充颜色. 就从该区域中随机的选取一个点。
从这个点拉一条直线出来, 一定要拉到图形的外面. 此时以该点为圆心。
看穿过拉出的直线的线段.
默认为0 
如果是顺时针方向就记为 +1,
 如果是逆时针方向，就记为 -1. 
最终看求和的结果. 如果是 0 就不填充. 如果是非零就填充.

注意：非零环绕原则只适用于一笔画完的图形





//context.setLineDash()//绘制虚线的方法，参数是一个数组
//参数数组的长度区分奇数和偶数
   //若是奇数,会把奇数复制一遍
        context.setLineDash([5]);
        context.setLineDash([5,10,20]);
   //若是偶数，则不复制,第一个是线条的长度,第二个是间隔的长度
        context.setLineDash([5,10]);